# Lazy load plugins
# Colorscheme {{{
[[plugins]] # nvim-treesitter
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufRead'
hook_post_update = 'TSUpdate'
hooks_file = '~/.config/nvim/hooks_files/treesitter.lua'
hook_source = '''
set foldmethod=expr
set foldexpr=nvim_treesitter#foldexpr()
set nofoldenable
augroup treesitter_fold
  autocmd!
  autocmd FileType toml,help set foldmethod=marker foldenable
augroup END
'''

[[plugins]] # nightfox.nvim
repo = 'EdenEast/nightfox.nvim'
depends = ['nvim-treesitter']
on_event = 'VimEnter'
hooks_file = '~/.config/nvim/hooks_files/nightfox.lua'

[[plugins]] # lightline.vim
repo = 'itchyny/lightline.vim'
on_event = ['VimEnter']
depends = ['vim-gitbranch']
hooks_file = '~/.config/nvim/hooks_files/lightline.vim'

# }}}

# Editor support plugins {{{
[[plugins]] # context_filetype.vim
repo = 'Shougo/context_filetype.vim'
hook_source = '''
let g:context_filetype#ignore_patterns = {
  \ 'toml': ['^\s*#\s*'],
  \ }
'''

[[plugins]] # vimproc.vim
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'LeafCage/vimhelpgenerator'
on_cmd = ['VimHelpGenerator', 'VimHelpGeneratorVirtual']
hook_source = '''
let g:vimhelpgenerator_author = 'yasunori-kirin0418'
let g:vimhelpgenerator_uri = 'https://github.com/yasunori-kirin0418'
'''

[[plugins]] # nvim-notify
repo = 'rcarriga/nvim-notify'
on_source = 'nightfox.nvim'
lua_source = '''
require("notify").setup({
  stages = "slide",
  background_color = "NormalFloat",
})
vim.notify = require("notify")
'''

[[plugins]] # suda.vim
repo = 'lambdalisue/suda.vim'
on_cmd = ['SudaRead', 'SudaWrite']

[[plugins]] # vim-quickrun
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'

[[plugins]] # vim-molder
repo = 'mattn/vim-molder'
hook_add = '''
augroup vimrc_molder
  autocmd BufEnter * call vimrc#molder_init()
augroup END
'''
hook_source = '''
let g:molder_show_hidden = v:true
'''

[[plugins]] # vim-molder-operations
repo = 'mattn/vim-molder-operations'
on_source = 'vim-molder'
hooks_file = '~/.config/nvim/hooks_files/molder.vim'

[[plugins]] # helpful.vim
repo = 'tweekmonster/helpful.vim'
on_cmd = 'HelpfulVersion'

[[plugins]] # bracey.vim
repo = 'turbio/bracey.vim'
on_cmd = 'Bracey'

[[plugins]] # deol.nvim
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'
hooks_file = '~/.config/nvim/hooks_files/deol.vim'

[[plugins]] # open-browser.vim
repo = 'tyru/open-browser.vim'
on_map = { 'nx' = '<Plug>(openbrowser-smart-search)' }
hook_add = '''
" open-browser.vim
let g:netrw_nogx = 1 " disable netrw's gx mapping.
nmap gx <Plug>(openbrowser-smart-search)
xmap gx <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'glidenote/memolist.vim'
on_cmd = ['MemoNew', 'MemoList', 'MemoNewWithMeta', 'MemoGrep']
hook_source = '''
let g:memolist_path = expand('~/Documents/memo')
'''

# }}}

# Coding support plugins {{{
[[plugins]] # lexima.vim
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'
hook_add = '''
let g:lexima_ctrlh_as_backspace = 1
'''

[[plugins]] # vim-eft
repo = 'hrsh7th/vim-eft'
on_map = { nxo = '<Plug>(eft-' }
hooks_file = '~/.config/nvim/hooks_files/eft.vim'
hook_source = '''
let g:eft_ignorecase = v:true
'''

[[plugins]] # vim-cursorword
repo = 'itchyny/vim-cursorword'
on_source = 'nightfox.nvim'

[[plugins]] # indent-blankline.nvim
repo = 'lukas-reineke/indent-blankline.nvim'
depends = 'nvim-treesitter'
on_source = 'nightfox.nvim'
hooks_file = '~/.config/nvim/hooks_files/indent_blankline.lua'

[[plugins]] # matchparen.nvim
repo = 'monkoose/matchparen.nvim'
depends = 'nvim-treesitter'
on_source = 'nightfox.nvim'
lua_source = '''
require('matchparen').setup()
'''

[[plugins]] # vim-sandwich
repo = 'machakann/vim-sandwich'
on_map = { nxo = '<Plug>(sandwich-' }
hooks_file = '~/.config/nvim/hooks_files/sandwich.vim'

[[plugins]]
repo = 'yasunori-kirin0418/partial.vim'
on_cmd = [
  'PartialOpen',
  'PartialEdit',
  'PartialTabedit',
  'PartialVsplit',
  'PartialSplit',
  'PartialCreate',
  'PartialUpdate',
  'PartialSurround',
]
hook_source = '''
let g:partial#partial_path_prefix = ' '
let g:partial#origin_path_prefix = ' '
let g:partial#relative_base_path = '~/.cache/partial.vim'
'''

[[plugins]] # Comment.nvim
repo = 'numToStr/Comment.nvim'
depends = 'nvim-treesitter'
on_map = { nox = '<Plug>(comment_toggle_' }
hooks_file = '~/.config/nvim/hooks_files/comment_nvim.vim'
lua_source = '''
require('plugins.comment')
'''

[[plugins]] # vim-themis
repo = 'thinca/vim-themis'
on_cmd = 'StartThemis'
hook_add = '''
command! StartThemis call dein#source('vim-themis')
'''

# }}}

# Filetype plugins {{{
[[plugins]] # emmet-vim
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css', 'scss', 'php']
hooks_file = '~/.config/nvim/hooks_files/emmet.vim'

[[plugins]] # plantuml-syntax
repo = 'aklt/plantuml-syntax'
on_ft = 'plantuml'

[[plugins]] # vim-maketable
repo = 'mattn/vim-maketable'
on_ft = 'markdown'

[[plugins]] # previm
repo = 'previm/previm'
depends = 'open-browser.vim'
on_ft = 'markdown'
on_cmd = 'PrevimOpen'
hooks_file = '~/.config/nvim/hooks_files/previm.vim'

[[plugins]]
repo = 'atusy/tsnode-marker.nvim'
on_ft = 'markdown'
hooks_file = '~/.config/nvim/hooks_files/tsnode_marker.lua'

# }}}

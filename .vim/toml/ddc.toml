[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['denops.vim', 'pum.vim']
on_event = 'InsertEnter'
hook_source = '''
    source ~/dotfiles/.vim/plugins/ddc.vim
'''

[[plugins]]
repo = 'Shougo/pum.vim'

[[plugins]]
repo = 'Shougo/ddc-around'
on_source ='ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source ='ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_length'
on_source ='ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source ='ddc.vim'

[[plugins]]
repo = 'LumaKernel/ddc-file'
on_source ='ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'nvim-lspconfig'

[[plugins]]
repo = 'Shougo/neosnippet'
on_event = 'InsertEnter'
hook_source = '''
    imap <C-k> <Plug>(neosnippet_expand_or_jump)
    smap <C-k> <Plug>(neosnippet_expand_or_jump)
    xmap <C-k> <Plug>(neosnippet_expand_target)

    " SuperTab like snippets behavior.
    imap <expr><TAB> pumvisible() ? 
    \ "\<C-n>" : neosnippet#jumpable() ? 
    \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
    smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

    if has('conceal')
        set conceallevel=2 concealcursor=niv
    endif
'''
on_ft = 'snippet'
depends = 'neosnippet-snippets'

[[plugins]]
repo = 'vim-skk/skkeleton'
on_map = {ic = '<Plug>(skkeleton-toggle)'}
hook_add = '''
    imap <C-j> <Plug>(skkeleton-toggle)
    cmap <C-j> <Plug>(skkeleton-toggle)
'''
hook_source = '''
    source ~/dotfiles/.vim/plugins/skkeleton.vim
'''

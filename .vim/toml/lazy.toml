[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_post_update = 'TSUpdate'
hook_source = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
    ensure_installed = 'maintained',
    highlight = {
        enable = true,
        disable = { 'vim' },
    },
    indent = {
        enable = true,
    },
}
EOF
'''

[[plugins]]
repo = 'EdenEast/nightfox.nvim''
depends = 'nvim-treesitter'
hook_source = '''
lua << EOF
local nightfox = require('nightfox')
nightfox.setup({
    fox = 'duskfox',
    transparent = false,
    terminal_colors = true,
    styles = {
        comments = 'italic',
        keywords = 'bold',
        functions = 'italic,bold',
    },
})

-- Load colorscheme.
nightfox.load()
EOF
'''

[[plugins]]
repo = 'itchyny/vim-gitbranch'

[[plugins]] # Modern and light status line.
repo = 'itchyny/lightline.vim'
on_event = 'VimEnter'
depends = ['vim-gitbranch', 'nightfox.nvim']
hook_add = '''
    source ~/dotfiles/.vim/plugins/lightline.vim
'''

[[plugins]]
repo = 'yasunori-kirin0418/lightline_skk.vim'
on_source = 'skkeleton'
hook_source = '''
    call lightline_skk#option('display', {
    \ 'hiragana': 'あぁ﫦',
    \ 'katakana': 'アァ﫦',
    \ 'hankaku-katakana': 'ｱｧ﫦',
    \ 'zenkaku-alphabet': 'Ａａ﫦',
    \ 'alphabet': 'Aa﫦',
    \ })
'''

[[plugins]] # Translate, Japanese to English
repo = 'skanehira/translate.vim'
on_cmd = 'Translate'
hook_add = '''
    nnoremap [trans] <Nop>
    nmap <Space>l [trans]
    nnoremap [trans]e <Cmd>Translate<CR>
    nnoremap [trans]j <Cmd>Translate!<CR>
'''
hook_source = '''
    " Pop up the translated content
    let g:translate_popup_window = 1
'''

#[[plugins]]
#repo = 'skanehira/denops-translate.vim'
#on_cmd = 'Translate'

[[plugins]] # Preview of replacement results
repo = 'markonm/traces.vim'
on_event= 'CmdlineEnter'

[[plugins]]
repo = 'lambdalisue/suda.vim'
on_cmd = ['SudaRead', 'SudaWrite']

[[plugins]]
repo = 'majutsushi/tagbar'
on_cmd = 'TagbarToggle'
hook_add = '''
    nmap <F8> :TagbarToggle<CR>
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
on_cmd = 'Defx'
hook_add = '''
    nnoremap [defx] <Nop>
    nmap <Space>f [defx]
    nnoremap [defx]a <cmd>Defx -search=`expand('%:p')` `expand('%:p:h')`<CR>
'''
hook_source = '''
    source ~/dotfiles/.vim/plugins/defx.vim
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'
on_ft = 'defx'

[[plugins]]
repo = 'kristijanhusak/defx-icons'
on_ft = 'defx'

[[plugins]]
repo = 'kristijanhusak/defx-git'
on_ft = 'defx'

[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'
hook_add = '''
    nnoremap [term] <Nop>
    nmap <Space>t [term]
    nnoremap [term]a <Cmd>Deol -no-start-insert -split=floating -winheight=30 -winwidth=120<CR>
    nnoremap [term]t <Cmd>tabnew<Bar>Deol -no-start-insert<CR>

    " Escape deol
    tnoremap <Esc> <C-\><C-n>
'''
hook_source = '''
    " let g:deol#prompt_pattern = '^❯ \?'
    " let g:deol#enable_ddc_completion = v:true
    let g:deol#shell_history_path = '~/.zsh_history'
'''

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'

[[plugins]]
repo = 'itchyny/vim-cursorword'
on_event = 'BufRead'

[[plugins]]
repo = 'airblade/vim-gitgutter'
on_event = 'BufRead'

[[plugins]]
repo = 'Yggdroot/indentLine'
on_event = 'BufRead'

[[plugins]]
repo = 'tpope/vim-surround'
on_event = 'BufRead'

[[plugins]]
repo = 'lambdalisue/gina.vim'
on_cmd = 'Gina'
hook_add = '''
    nnoremap [gina] <Nop>
    nmap <Space>g [gina]
    nnoremap [gina]s <Cmd>Gina status<CR>
    nnoremap [gina]c <Cmd>Gina commit<CR>
    nnoremap [gina]l <Cmd>Gina log<CR>
    nnoremap [gina]b <Cmd>Gina blame<CR>
    nnoremap [gina]d <Cmd>Gina patch<CR>
'''
hook_source = '''
    call gina#custom#command#option('status', '-s')
    call gina#custom#command#option('status', '--opener', 'split')
    call gina#custom#command#option('commit', '-v')
    call gina#custom#command#option('log', '--opener', 'vsplit')
    call gina#custom#command#option('log', '--graph')
    call gina#custom#command#option('log', '--all')
    call gina#custom#command#option('blame', '--opener', 'tabedit')
    call gina#custom#command#option('patch', '--oneside')
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'

[[plugins]]
repo = 'Shougo/neosnippet'
on_event = 'InsertEnter'
hook_source = '''
    source ~/dotfiles/.vim/plugins/neosnippet.vim
'''
on_ft = 'snippet'
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

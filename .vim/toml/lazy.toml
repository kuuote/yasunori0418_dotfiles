[[plugins]]
repo = 'lewis6991/impatient.nvim'
hook_source = '''
  lua require('impatient')
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
depends = ['impatient.nvim']
hook_post_update = 'TSUpdate'
hook_source = '''
lua << EOF
require'nvim-treesitter.configs'.setup {
  ensure_installed = 'all',
  highlight = {
    enable = true,
    disable = { 'swift' },
  },
  indent = {
    enable = true,
  },
}
EOF
'''

[[plugins]]
repo = 'EdenEast/nightfox.nvim'
depends = 'nvim-treesitter'
hook_source = '''
source ~/dotfiles/.vim/plugins/nightfox.lua
'''

[[plugins]]
repo = 'itchyny/vim-gitbranch'

[[plugins]] # Modern and light status line.
repo = 'itchyny/lightline.vim'
on_event = 'VimEnter'
depends = ['vim-gitbranch', 'nightfox.nvim']
hook_add = '''
source ~/dotfiles/.vim/plugins/lightline.vim
'''

[[plugins]]
repo = 'lambdalisue/suda.vim'
on_cmd = ['SudaRead', 'SudaWrite']

[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'
hook_add = '''
nnoremap [term] <Nop>
nmap <Space>t [term]
nnoremap [term]a <Cmd>Deol
  \ -no-auto-cd
  \ -no-start-insert
  \ -split=floating
  \ -winheight=30
  \ -winwidth=120
  \ -toggle<CR>
nnoremap [term]t <Cmd>tabnew<Bar>Deol -no-start-insert<CR>
nnoremap [term]c <Cmd>execute 'Deol'
  \ '-cwd=' . fnamemodify(expand('%'), ':h')
  \ '-no-auto-cd'
  \ '-no-start-insert'
  \ '-split=floating'
  \ '-winheight=30'
  \ '-winwidth=120'
  \ '-toggle'<CR>
nnoremap [term]h <Cmd>Deol
  \ -cwd=~
  \ -no-start-insert
  \ -split=floating
  \ -winheight=30
  \ -winwidth=120
  \ -toggle<CR>

" Escape deol
tnoremap <Esc> <C-\><C-n>
'''
hook_source = '''
" let g:deol#prompt_pattern = '^‚ùØ \?'
" let g:deol#enable_ddc_completion = v:true
let g:deol#shell_history_path = '~/.zsh_history'
let g:deol#enable_dir_changed = v:false
let g:deol#nvim_server = '~/.cache/nvim/server.pipe'
'''

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'

[[plugins]]
repo = 'itchyny/vim-cursorword'
on_event = 'BufEnter'

[[plugins]]
repo = 'airblade/vim-gitgutter'
on_event = 'BufRead'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
on_event = 'BufEnter'
hook_source = '''
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_default_mapping = 0
let g:indent_guides_exclude_filetypes = ['help', 'ddu-ff-filter', 'ddu-ff', 'ddu-filer', 'deol']
'''

[[plugins]]
repo = 'machakann/vim-sandwich'
on_map = { xon = '<Plug>(sandwich-'}
hook_add = '''
"Disable s for vim-sandwich
nnoremap s <Nop>
xnoremap s <Nop>

let g:sandwich_no_default_key_mappings = 1

" add
nmap sa <Plug>(sandwich-add)
xmap sa <Plug>(sandwich-add)
omap sa <Plug>(sandwich-add)

" delete
nmap sd <Plug>(sandwich-delete)
xmap sd <Plug>(sandwich-delete)
nmap sdb <Plug>(sandwich-delete-auto)

" replace
nmap sr <Plug>(sandwich-replace)
xmap sr <Plug>(sandwich-replace)
nmap srb <Plug>(sandwich-replace-auto)

" text-objects (if you need)
"omap ib <Plug>(textobj-sandwich-auto-i)
"xmap ib <Plug>(textobj-sandwich-auto-i)
"omap ab <Plug>(textobj-sandwich-auto-a)
"xmap ab <Plug>(textobj-sandwich-auto-a)

"omap is <Plug>(textobj-sandwich-query-i)
"xmap is <Plug>(textobj-sandwich-query-i)
"omap as <Plug>(textobj-sandwich-query-a)
"xmap as <Plug>(textobj-sandwich-query-a)

" Black magic...
"nnoremap <silent> s <Cmd>call dein#source('vim-sandwich')<CR>
"xnoremap <silent> s <Cmd>call dein#source('vim-sandwich')<CR>
"onoremap <silent> s <Cmd>call dein#source('vim-sandwich')<CR>
'''

[[plugins]]
repo = 'lambdalisue/gina.vim'
on_cmd = 'Gina'
hook_add = '''
nnoremap [gina] <Nop>
nmap <Space>g [gina]
nnoremap [gina]s <Cmd>Gina status<CR>
nnoremap [gina]c <Cmd>Gina commit<CR>
nnoremap [gina]l <Cmd>Gina log<CR>
nnoremap [gina]b <Cmd>Gina blame<CR>
nnoremap [gina]d <Cmd>Gina patch<CR>
nnoremap [gina]ps <Cmd>Deol git push -split=floating -winheight=30 -winwidth=120 -toggle<CR>
nnoremap [gina]pl <Cmd>Deol git pull -split=floating -winheight=30 -winwidth=120 -toggle<CR>
'''
hook_source = '''
call gina#custom#command#option('status', '-s')
call gina#custom#command#option('status', '--opener', 'split')
call gina#custom#command#option('commit', '-v')
call gina#custom#command#option('log', '--opener', 'vsplit')
call gina#custom#command#option('log', '--graph')
call gina#custom#command#option('log', '--all')
call gina#custom#command#option('blame', '--opener', 'tabedit')
call gina#custom#command#option('patch', '--oneside')
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'

[[plugins]]
repo = 'jacquesbh/vim-showmarks'
on_cmd = ['DoShowMarks', 'NoShowMarks']

[[plugins]]
repo = 'tweekmonster/helpful.vim'
on_cmd = 'HelpfulVersion'

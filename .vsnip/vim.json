{
  "if": {
    "scope": "vim",
    "prefix": "if",
    "body": [
      "if ${1:condition}",
      "\t${2:target}",
      "endif"
    ],
    "description": "if ~ endif"
  },
  "if else": {
    "scope": "vim",
    "prefix": "if else",
    "body": [
      "if ${1:condition}",
      "\t${2:target}",
      "else",
      "\t${3:target}",
      "endif"
    ],
    "description": "if ~ else ~ endif"
  },
  "if elseif": {
    "scope": "vim",
    "prefix": "if elseif",
    "body": [
      "if ${1:condition}",
      "\t${2:target}",
      "elseif ${3:condition}",
      "\t${4:target}",
      "else",
      "\t${4:target}",
      "endif"
    ],
    "description": "if ~ elseif ~ else ~ endif"
  },
  "for": {
    "scope": "vim",
    "prefix": "for",
    "body": [
      "for ${1:var} in ${2:list}",
      "\t${3:target}",
      "endfor"
    ],
    "description": "for in endfor"
  },
  "while": {
    "scope": "vim",
    "prefix": "while",
    "body": [
      "while ${1:condition}",
      "\t${2:target}",
      "endwhile"
    ],
    "description": "while ~ endwhile"
  },
  "function": {
    "scope": "vim",
    "prefix": "func",
    "body": [
      "function! ${1:func_name}(${2:arg}) abort",
      "\t${3:target}",
      "endfunction"
    ],
    "description": "function endfunctioin"
  },
  "try": {
    "scope": "vim",
    "prefix": "try",
    "body": [
      "try",
      "\t${1:target}",
      "catch /${2:pattern}/",
      "\t${3:handling}",
      "endtry"
    ],
    "description": "try catch endtry"
  },
  "tryfinally": {
    "scope": "vim",
    "prefix": "tryf",
    "body": [
      "try",
      "\t${1:target}",
      "finally",
      "\t${2:handling}",
      "endtry"
    ],
    "description": "try finally endtry"
  },
  "catch_pattern": {
    "scope": "vim",
    "prefix": "catch",
    "body": [
      "catch /${1:pattern${2|empty, E484, Vim(cmdname)|}}/"
    ],
    "description": "catch /pattern/"
  },
  "echomsg": {
    "scope": "vim",
    "prefix": "log",
    "body": [
      "echomsg '${1:target}'"
    ],
    "description": "leave in log"
  },
  "command": {
    "scope": "vim",
    "prefix": "cmd",
    "body": [
      "commnd! ${1:cmd_name} call ${2:func_name}"
    ],
    "description": "Make command"
  },
  "augroup": {
    "scope": "vim",
    "prefix": "augroup",
    "body": [
      "augroup ${1:augroup_name}",
      "\tautocmd!",
      "\tautocmd ${2:event}",
      "augroup END"j
    ],
    "description": "augroup"
  },
  "autocmd": {
    "scope": "vim",
    "prefix": "autocmd",
    "body": [
      "\tautocmd ${1:event}"
    ],
    "description": "autocmd"
  },
  "lua": {
    "scope": "vim",
    "prefix": "lua",
    "body": [
      "lua <<EOF",
      "${1:lua_lang}",
      "EOF"
    ],
    "description": "lua inline code"
  }
}
